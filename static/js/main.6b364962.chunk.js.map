{"version":3,"sources":["constants/routes.js","firebase/firebase.js","firebase/env.js","firebase/auth.js","firebase/db.js","components/SignOut.js","components/Navigation.jsx","components/SignUp.js","components/PasswordForget.js","components/SignIn.js","components/AuthUserContext.js","components/withAuthorization.js","components/PasswordChange.js","components/Account.js","components/ChangeDetails.js","components/AddGiftForm/index.js","components/Wishlist/ListItem.js","components/Wishlist/index.js","components/Landing.js","components/ViewWishlistPage/index.js","App.js","components/withAuthentication.js","reportWebVitals.js","index.js"],"names":["SIGN_UP","SIGN_IN","LANDING","PASSWORD_FORGET","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","auth","firestoredb","firestore","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordChange","currentUser","updatePassword","doCreateUser","id","name","ref","set","doAddGift","wishlistId","data","onceGetUsers","once","doGetAnUnser","uid","SignOutButton","color","to","routes","onClick","Button","Navigation","props","useState","setUsername","popupOpen","setPopupOpen","wishlistUsers","setWishlistUsers","wishlists","setWishlists","useEffect","getUserId","on","snapshot","val","e","className","getName","SignOut","wishlistArray","user","push","getWishlists","INITIAL_STATE","passwordOne","passwordTwo","byPropKey","propertyName","value","SignUpForm","state","onSubmit","event","history","then","authUser","alert","setState","catch","err","message","preventDefault","this","isInvalid","passlevel","passlevelstyle","Container","Form","InputGroup","Prepend","Control","type","placeholder","autoFocus","required","onChange","target","style","disabled","Component","SignUpLink","withRouter","marginTop","PasswordForgetForm","error","marginBottom","PasswordForgetLink","PasswordForgetPage","SignInForm","AuthUserContext","React","createContext","withAuthorization","authCondition","WithAuthorization","onAuthStateChanged","Consumer","loggedUser","PasswordChangeForm","doPasswordUpdate","Label","AccountPage","PasswordChange","providerData","providerId","AddGiftForm","setGiftItem","gift","handleSubmit","isExpanded","setIsExpanded","makeSimpleInput","displayName","htmlFor","ListItem","item","isListOwner","getItem","index","handleDelete","askToGoIn","price","itemData","formatter","Intl","NumberFormat","currency","gotten","indexOf","image_url","src","alt","link","href","format","notes","isCustom","includes","title","icon","faTrash","faShoppingCart","faUserFriends","map","getGottenByList","Wishlist","wishlistData","setWishlistData","setIsListOwner","customName","setCustomName","wishlistCopy","listId","JSON","parse","splice","stringify","Set","shouldShow","listItems","userId","Landing","setGift","wishlistItems","setWishlistItems","setUsers","a","myWishlist","dataCopy","updatedGift","ViewWishlistPage","getId","window","location","pathname","split","withAuthentication","Provider","exact","path","component","LandingPage","SignUpPage","SignInPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b364962.chunk.js","sourcesContent":["export const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const LANDING = \"/\";\nexport const HOME = \"/home\";\nexport const WISHLIST = \"/wishlist/:id\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport config from './env';\n\nif (!firebase.apps.length) {\n  //initializing with the config object\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\nconst auth = firebase.auth();\nconst firestoredb = firebase.firestore();\n\nexport { db, auth, firestoredb };\n","export default {\n    apiKey: \"AIzaSyAliVwD2otk-Zcm3ZUTqkOP76VU5RdmNxI\",\n    authDomain: \"gift-list-40cc7.firebaseapp.com\",\n    databaseURL: \"https://gift-list-40cc7-default-rtdb.firebaseio.com\",\n    projectId: \"gift-list-40cc7\",\n    storageBucket: \"gift-list-40cc7.appspot.com\",\n    messagingSenderId: \"332949149966\",\n    appId: \"1:332949149966:web:c80a0da4615b68eaca5f5f\",\n    measurementId: \"G-ZZPV3B5BFE\"\n};\n","import { auth } from \"./firebase\";\n\n//sign up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n//sign in\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n//sign out\nexport const doSignOut = () => auth.signOut();\n\n//## below are two more functions, for resetting or changing passwords ##\n\n//password reset\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n//password change\nexport const doPasswordChange = password =>\n  auth.currentUser.updatePassword(password);\n","import { db } from \"./firebase\";\n\n//create an user and store it at users/id path (it's an asynchronous func)\nexport const doCreateUser = ( id, name, email ) =>\n  db.ref(`users/${id}`).set({\n    name,\n    email\n  });\n\nexport const doAddGift = (wishlistId, data) => {\n    db.ref(`wishlists/${wishlistId}`).set(data)\n}\n\n//returns all users from firebase realtime db\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\nexport const doGetAnUnser = uid => db.ref(`users/${uid}`).once(\"value\");\n\n","import React from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as routes from \"../constants/routes\";\r\nimport { Button } from 'react-bootstrap'; \r\n\r\nconst SignOutButton = () => (\r\n  <Link color=\"info\" to={routes.LANDING} onClick={auth.doSignOut}>\r\n    <Button>Sign Out</Button>\r\n  </Link>\r\n);\r\n\r\nexport default SignOutButton;\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport * as routes from \"../constants/routes\";\r\nimport SignOutButton from './SignOut';\r\nimport {auth} from '../firebase/firebase';\r\nimport './navigation.css'\r\nimport {firebase, db} from \"../firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Navigation(props) {\r\n    const [user, setUsername] = useState('')\r\n    const [popupOpen, setPopupOpen] = useState(false)\r\n    const [wishlistUsers, setWishlistUsers] = useState([])\r\n    const [wishlists, setWishlists] = useState()\r\n\r\n    useEffect( () => {\r\n        const currentUserId = getUserId()\r\n        firebase.db.ref('users/' + getUserId()).on(\"value\", snapshot => {\r\n            setUsername(snapshot.val());\r\n        });\r\n        firebase.db.ref('users').on(\"value\", snapshot => {\r\n            setWishlistUsers(snapshot.val())\r\n        });\r\n\r\n        try {\r\n            firebase.db.ref(`wishlists`).on(\"value\", snapshot => {\r\n                setWishlists(snapshot.val());\r\n            });\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }, []);\r\n\r\n    const getUserId = () => {\r\n        try {\r\n            return firebase.auth.currentUser.uid;\r\n        } catch (e) {\r\n            return ''\r\n        }\r\n    }\r\n\r\n\r\n    const getWishlists = () => {\r\n        const wishlistArray = [];\r\n        for(const user in wishlistUsers) {\r\n            // make sure the wishlist is not yours, and the user has a wishlist\r\n            if(user !== getUserId() && wishlists[user]) {\r\n                wishlistArray.push(\r\n                    <div key={user} className={\"popupItem\"}>\r\n                        <Link to={'/wishlist/' + user} onClick={() => setPopupOpen(false)}>\r\n                            {wishlistUsers[user].name}\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        }\r\n        return wishlistArray\r\n    }\r\n\r\n    const getName = () => {\r\n        try {\r\n            return wishlistUsers[getUserId()].name;\r\n        } catch(e) {\r\n            return \"Home\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            {auth.currentUser === null ? (\r\n                    <Link to={routes.SIGN_IN}>\r\n                        <button>SignIn/SignUp</button>\r\n                    </Link>\r\n                ) :\r\n                (<>\r\n                        <button className={\"blueButton\"} onClick={() => setPopupOpen(!popupOpen)}>View other wishlists</button>\r\n                        <h2>\r\n                            <Link to={'/'}>\r\n                                {getName()}\r\n                            </Link>\r\n                        </h2>\r\n                        <SignOutButton/>\r\n                        {popupOpen && <>\r\n                            <div className=\"popupBackground\" onClick={() => setPopupOpen(false)}></div>\r\n                            <div className={\"popup\"}>\r\n                                <h2 className=\"ppTitle\">Check out someone else's wishlist</h2>\r\n                                {getWishlists()}\r\n                            </div>\r\n                            </>}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as routes from \"../constants/routes\";\nimport { Button, Form, InputGroup, Container } from \"react-bootstrap\";\n\nimport Navigation from './Navigation';\n\nconst SignUpPage = ({ history }) => (\n  <div>\n    <div className=\"div-flex\" style={{marginTop: \"110px\"}}>\n      <center>\n        <SignUpForm history={history} />\n      </center>\n      <br/>\n    </div>\n  </div>\n);\n\n//################### Sign Up Form ###################\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\"\n};\n\n//A Higher order function with prop name as key and the value to be assigned to\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nclass SignUpForm extends Component {\n  state = {\n    ...INITIAL_STATE\n  };\n\n  onSubmit = event => {\n    const { name, email, passwordOne } = this.state;\n    const { history } = this.props;\n\n    auth\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(authUser => {\n          db.doCreateUser(authUser.user.uid, name, email )\n            .then(() => {\n              alert(\"Welcome \" + name + \"!\\nwe have successfully created your account.\");\n            })\n            .then(()=> {\n              auth.doSignInWithEmailAndPassword(email, passwordOne);\n              this.setState({\n                ...INITIAL_STATE\n              });\n              history.push(routes.LANDING);\n            })\n        })\n        .catch(err => {\n          alert(err.message);\n        });\n\n    event.preventDefault(); //prevents refreshing\n  };\n\n  render() {\n    const {\n      name,\n      email,\n      passwordOne,\n      passwordTwo\n    } = this.state;\n\n    //a boolen to perform validation\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      name === \"\";\n\n\n    let passlevel = \"Password must contain at least 6 characters\", passlevelstyle={color: \"black\"};\n    if (passwordOne.length < 6) {\n      passlevel = \"Password must contain at least 6 characters\";\n      passlevelstyle={color: \"red\"}\n    } else if (passwordOne.length <= 9 && passwordOne.length >= 6) {\n      passlevel = \"Weak\";\n      passlevelstyle={color: \"red\"}\n    } else if(passwordOne.length < 12) {\n      passlevel = \"Good\";\n      passlevelstyle={color: \"blue\"}\n    } else if(passwordOne.length >= 12) {\n      passlevel = \"Strong\";\n      passlevelstyle={color: \"green\"}\n    } else {\n      passlevel = \"Password must contain at least 6 characters\";\n      passlevelstyle={color: \"black\"};\n    }\n\n    return (\n      <div className=\"inputclass\">\n        <Container>\n          <h2 id=\"mytexth2\">Sign Up</h2>\n          <h5 id=\"mytexth5\">All fields are required to be filled</h5>\n          <Form onSubmit={this.onSubmit}>\n            <InputGroup>\n              <InputGroup.Prepend className=\"inputlabel\">Full Name</InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                id=\"inputtext\"\n                placeholder=\" John Jose\"\n                value={name}\n                autoFocus\n                required\n                onChange={e =>\n                  this.setState(byPropKey(\"name\", e.target.value))\n                }\n              />\n            </InputGroup>\n            <br/>\n            <InputGroup>\n            <InputGroup.Prepend className=\"inputlabel\">Email</InputGroup.Prepend>\n              <Form.Control\n                id=\"inputtext\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\" user@gmail.com\"\n                value={email}\n                required\n                onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\n              />\n            </InputGroup>\n\n            <InputGroup>\n              <InputGroup.Prepend className=\"inputlabel\">Password</InputGroup.Prepend>\n              <Form.Control\n                id=\"inputtext\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={passwordOne}\n                required\n                onChange={e =>\n                  this.setState(byPropKey(\"passwordOne\", e.target.value))\n                }\n                />\n            </InputGroup>\n            <p style={passlevelstyle}>{passlevel}</p>\n            <br/>\n            <InputGroup>\n              <InputGroup.Prepend className=\"inputlabel\">Confirm Password</InputGroup.Prepend>\n              <Form.Control\n                id=\"inputtext\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Confirm Password\"\n                value={passwordTwo}\n                required\n                onChange={e =>\n                  this.setState(byPropKey(\"passwordTwo\", e.target.value))\n                }\n\n              />\n            </InputGroup>\n              <br/>\n            <div className=\"text-center\">\n              <Button disabled={isInvalid} type=\"submit\" id=\"mybutton\">\n                Sign Up\n              </Button>\n            </div>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p id=\"mylink\">\n    Don't have an account? <Link to={routes.SIGN_UP} id=\"mylink\">Sign Up</Link>\n  </p>\n);\n\nexport default withRouter(SignUpPage);\nexport { SignUpForm, SignUpLink };\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, InputGroup, Container } from \"react-bootstrap\";\nimport Navigation from './Navigation';\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\n//it resets your password. It doesn’t matter if you are authenticated or not\nconst PasswordForgetPage = () => (\n  <div className=\"div-flex\">\n    <center style={{marginTop: \"110px\"}}>\n      <PasswordForgetForm />\n      <br/>\n    </center>\n  </div>\n);\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\n//################### PasswordForget Form ###################\nconst INITIAL_STATE = {\n  email: \"\"\n};\n\n\nclass PasswordForgetForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email } = this.state;\n    auth\n      .doPasswordReset(email)\n      .then(() => {\n        alert(\"We have sent you reset password link to your registered email address.\");\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        alert(error.message);\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { email } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return ( <div className=\"inputclass\">\n        <Container style={{marginBottom: \"150px\"}}>\n          <h2 id=\"mytexth2\">Reset Password</h2>\n          <Form onSubmit={this.onSubmit}>\n            <InputGroup>\n              <InputGroup.Prepend className=\"inputlabel\">Email</InputGroup.Prepend>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                id=\"inputtext\"\n                placeholder=\"Enter your registered email\"\n                value={email}\n                required\n                onChange={event =>\n                  this.setState(byPropKey(\"email\", event.target.value))\n                }\n              />\n            </InputGroup>\n            <br/>\n            <div className=\"text-center\">\n              <Button disabled={isInvalid} type=\"submit\" id=\"mybutton\">\n                Reset Password\n              </Button>\n            </div>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\n//################### PasswordForget Link ###################\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={routes.PASSWORD_FORGET} id=\"mylink\">Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nexport { PasswordForgetForm, PasswordForgetLink };\n\n","import React, { Component } from \"react\";\nimport { Button, Form, InputGroup, Container } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { SignUpLink } from \"./SignUp\";\nimport { PasswordForgetLink } from \"./PasswordForget\";\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\nimport Navigation from './Navigation';\n\nconst SignInPage = ({ history }) => {\n  return (\n    <div>\n      <center>\n        <SignInForm history={history} />\n        <SignUpLink />\n        <PasswordForgetLink />\n        <br/>\n        <hr/>\n      </center>\n    </div>\n  );\n};\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\"\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n    const { history } = this.props;\n\n    auth\n      .doSignInWithEmailAndPassword(email, password)\n        .then(() => {\n          this.setState({ ...INITIAL_STATE });\n          history.push(routes.LANDING);\n        })\n        .catch(error => {\n          alert(error.message);\n        });\n\n      event.preventDefault();\n  };\n\n  render() {\n    const { email, password } = this.state;\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <div className=\"inputclass\">\n        <Container>\n            <h2 id=\"mytexth2\">Sign In</h2>\n            <Form onSubmit={this.onSubmit}>\n              <InputGroup>\n                <InputGroup.Prepend className=\"inputlabel\">Email</InputGroup.Prepend>\n                <Form.Control\n                  id=\"inputtext\"\n                  type=\"email\"\n                  placeholder=\"user@gmail.com\"\n                  value={email}\n                  required\n                  autoFocus\n                  onChange={event =>\n                    this.setState(byPropKey(\"email\", event.target.value))\n                  }\n                  />\n              </InputGroup>\n              <br/>\n              <InputGroup>\n                <InputGroup.Prepend className=\"inputlabel\">Password</InputGroup.Prepend>\n                <Form.Control\n                  id=\"inputtext\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  required\n                  onChange={event =>\n                    this.setState(byPropKey(\"password\", event.target.value))\n                  }\n                  />\n              </InputGroup>\n              <br/>\n              <div className=\"text-center\">\n                <Button disabled={isInvalid} type=\"submit\" id=\"mybutton\">\n                  Sign In\n                </Button>\n              </div>\n            </Form>\n            <hr/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport { SignInForm };\n","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null); //using React's Context API\n\nexport default AuthUserContext;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport AuthUserContext from \"./AuthUserContext\";\nimport { firebase } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst withAuthorization = authCondition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          //if the authorization fails, redirects to sign in page\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {/* it either renders the passed component or not */}\n          {authUser =>\n            authUser ? (\n              <Component {...this.props} loggedUser={authUser} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\n};\n\nexport default withAuthorization;\n","import React, { Component } from \"react\";\nimport { Form, InputGroup, Container, Button } from \"react-bootstrap\";\nimport { auth } from \"../firebase\";\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\"\n};\n\nclass PasswordChangeForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    auth\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        alert(error.message);\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    let passlevel = \"Password must contain at least 6 characters\", passlevelstyle={color: \"black\"};\n    if (passwordOne.length < 6) {\n      passlevel = \"Password must contain at least 6 characters\";\n      passlevelstyle={color: \"red\"}\n    } else if (passwordOne.length <= 9 && passwordOne.length >= 6) {\n      passlevel = \"Weak\";\n      passlevelstyle={color: \"red\"}\n    } else if(passwordOne.length < 12) {\n      passlevel = \"Good\";\n      passlevelstyle={color: \"blue\"}\n    } else if(passwordOne.length >= 12) {\n      passlevel = \"Strong\";\n      passlevelstyle={color:\"green\"}\n    } else {\n      passlevel = \"Password must contain at least 6 characters\";\n      passlevelstyle={color: \"black\"};\n    }\n\n    return (\n      <div className=\"inputclass\">\n        <br/>\n        <h5 id=\"mytextjambo\">Change Password</h5>\n        <Container>\n          <Form onSubmit={this.onSubmit}>\n            <InputGroup>\n              <Form.Label className=\"inputlabel\">New Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password1\"\n                id=\"inputtext\"\n                placeholder=\"New Password\"\n                value={passwordOne}\n                onChange={e =>\n                  this.setState(byPropKey(\"passwordOne\", e.target.value))\n                }\n              />\n            </InputGroup>\n            <p style={passlevelstyle}>{passlevel}</p>\n            <InputGroup>\n              <Form.Label className=\"inputlabel\">Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password2\"\n                id=\"inputtext\"\n                placeholder=\"Confirm Password\"\n                value={passwordTwo}\n                onChange={e =>\n                  this.setState(byPropKey(\"passwordTwo\", e.target.value))\n                }\n              />\n            </InputGroup>\n            <div className=\"text-center\">\n              <br/>\n              <Button disabled={isInvalid} type=\"submit\" id=\"mybutton\">\n                Change Password\n              </Button>\n            </div>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PasswordChangeForm;","import React, { Component } from \"react\";\nimport AuthUserContext from \"./AuthUserContext\";\nimport withAuthorization from \"./withAuthorization\"; //redirects to sign in if user not signed in\nimport { db, auth } from '../firebase/firebase';\nimport Navigation from \"./Navigation\";\nimport PasswordChangeForm from './PasswordChange';\nimport { Container, Table } from \"react-bootstrap\";\nimport ChangeDetailsForm from './ChangeDetails'\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  error: null\n};\n\nclass AccountPage extends Component {\n\n  state = {...INITIAL_STATE};\n\n  componentWillMount() {\n      db.ref('users/' + auth.currentUser.uid).once('value').then((snapshot) => {\n        if (snapshot) {\n          this.setState(snapshot.val());\n        }\n      }).catch( e => {\n        alert(e.message);\n      })\n  }\n\n  render() {\n    return <div>\n      <AuthUserContext.Consumer >\n        {authUser => (\n          <Container style={{marginTop: \"110px\"}}>\n          <center>\n            <div className=\"div-flex\">\n              <div>\n                <h2>{this.state.name}</h2>\n                <div>{this.state.email}</div>\n              </div>\n            </div>\n            <br/>\n            <PasswordChangeForm />\n          </center>\n          </Container>\n        )}\n      </AuthUserContext.Consumer>\n      <hr/>\n      <br/>\n    </div>\n  }\n};\n\nconst authCondition = authUser =>\n  !!authUser && authUser.providerData[0].providerId !== \"facebook.com\"; //true and false\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React, { Component } from \"react\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\nimport { Button, Form, InputGroup, Container } from \"react-bootstrap\";\r\n\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nclass ChangeDetailsForm extends Component {\r\n  state = {\r\n    details: \"\"\r\n  };\r\n\r\n\r\n  onSubmit = event => {\r\n    db.ref('users/'+ auth.currentUser.uid).update({})\r\n    .then(()=>{\r\n      alert(\"Your details are successfully updated.\\nRefresh the page to see changes.\");\r\n    })\r\n    .catch(err => {\r\n      alert(err.message);\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      details\r\n    } = this.state;\r\n\r\n    //a boolen to perform validation\r\n    const isInvalid = details === \"\";\r\n\r\n    return (\r\n      <div className=\"inputclass\">\r\n        <Container>\r\n        <h5 id=\"mytextjambo\">Change Your Details</h5>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend className=\"inputlabel\">Change Details</InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"inputtext\"\r\n                placeholder=\" Change details\"\r\n                value={details}\r\n                onChange={e => this.setState(byPropKey(\"details\", e.target.value))}\r\n              />\r\n            </InputGroup>\r\n            <br/>\r\n            <div className=\"text-center\">\r\n              <Button disabled={isInvalid} type=\"submit\" id=\"mybutton\">\r\n                Save Changes\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangeDetailsForm;\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport './index.css'\n\nexport default function AddGiftForm(props) {\n\n    const {setGiftItem, gift, handleSubmit} = props\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    const makeSimpleInput = (name, displayName, type) => {\n        return (\n            <div key={name} className={\"formItem\"}>\n                <label htmlFor={name}>\n                    {`${displayName}:`}\n                </label>\n                <input className=\"input\" id={name} type={type || 'text'} value={gift[name] || ''} onChange={(e) => {setGiftItem(name, e.target.value)}}/>\n            </div>\n        )\n    }\n\n    const doHandleSubmit = () => {\n        setIsExpanded(false)\n        handleSubmit()\n    }\n\n    return (\n        <>\n            <div className={\"addNameButtonContainer\"}>\n                <button className={\"addWishlistButton\"} onClick={()=>setIsExpanded(!isExpanded)}>Add Something to your Wishlist</button>\n            </div>\n            {isExpanded &&\n                <>\n                    <div className=\"popupBackground\" onClick={() => setIsExpanded(false)}></div>\n                    <div className={\"addForm\"}>\n                        <h2 className={\"wishlistTitle\"}>Add an item to your wishlist</h2>\n                        <form>\n                            {makeSimpleInput('name', 'Name')}\n                            {makeSimpleInput('image_url', 'Image url')}\n                            {makeSimpleInput('link', 'Link')}\n                            {makeSimpleInput('price', 'Approximate Price', \"number\")}\n                            {makeSimpleInput('notes', 'Notes')}\n                            <button type=\"submit\" className={\"blueButton\"} onClick={doHandleSubmit}>Add To Wishlist</button>\n                        </form>\n                    </div>\n                </>}\n        </>\n    );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport './listItem.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faUserFriends, faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport {firebase} from \"../../firebase\";\n\n\nexport default function ListItem(props) {\n    const {item, isListOwner, getItem, index, handleDelete, askToGoIn} = props\n    const [wishlistUsers, setWishlistUsers] = useState([])\n\n    useEffect( () => {\n        firebase.db.ref('users').on(\"value\", snapshot => {\n            setWishlistUsers(snapshot.val())\n        });\n\n    }, []);\n\n    const getPrice = (price) => {\n        return formatter.format(price);\n    }\n\n\n\n    // Create our number formatter.\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n\n    const getUserId = () => {\n        try {\n            return firebase.auth.currentUser.uid;\n        } catch (e) {\n            return ''\n        }\n    }\n\n    const getItemClassName = (itemData) => {\n        if(itemData.gotten && itemData.gotten.indexOf(getUserId()) > -1) {\n            return \"listItemGottenYou\"\n        }\n        if(itemData.gotten && item.gotten.length > 0 && itemData.gotten.indexOf(getUserId()) === -1) {\n            return \"listItemGotten\"\n        }\n        return \"listItem\"\n    }\n\n    const getGottenByList = (item) => {\n        return item.gotten.map(name => {\n            if(name && wishlistUsers && wishlistUsers[name]) {\n                return (<span key={name}> {wishlistUsers[name].name}</span>)\n            }\n        })\n    }\n\n    return (\n        <div className={getItemClassName(item)}>\n            {item.image_url && <img className={\"image\"} src={item.image_url} alt={item.name}/>}\n            <div className={\"name\"}>{item.name}</div>\n            {item.link && <a className={\"link\"} href={item.link}>Visit link</a>}\n            {item.price && <div className={\"price\"}>Approximate price: {getPrice(item.price)}</div>}\n            {item.notes && <div className={\"notes\"}>Notes: {item.notes}</div>}\n            <div className={\"actionButtons\"}>\n                {(isListOwner || (!isListOwner && item.isCustom && item.gotten.includes(getUserId()))) && <button onClick={() => handleDelete(index, item)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></button>}\n                {!isListOwner && <button onClick={() => getItem(index, item)} title=\"Click if you are getting this\"><FontAwesomeIcon icon={faShoppingCart} /></button>}\n                {!isListOwner && <button onClick={() => askToGoIn(index, item)} title=\"I want to get this with other people\"><FontAwesomeIcon icon={faUserFriends} /></button>}\n            </div>\n            {item.gotten && item.gotten.length > 0 && !isListOwner && !item.gotten.includes(getUserId()) && <div className={'gottenCover'}>Gotten by:{getGottenByList(item)}</div>}\n        </div>\n    );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport ListItem from './ListItem'\nimport {db, firebase} from \"../../firebase\";\nimport './wishlist.css'\n\nexport default function Wishlist(props) {\n    const {id} = props\n    const [wishlistData, setWishlistData] = useState([])\n    const [isListOwner, setIsListOwner] = useState(true)\n    const [customName, setCustomName] = useState('')\n\n    const handleAddCustomItem = (e) => {\n        e.preventDefault()\n        const userId = getUserId()\n        const listId = id;\n        let dataCopy = wishlistData; // an array of items (each one is an object)\n        let wishlistCopy\n        if(dataCopy && dataCopy[listId]) {\n            wishlistCopy = JSON.parse(wishlistData[id])\n        } else {\n            wishlistCopy = []\n        }\n        wishlistCopy.push({\n            name: customName,\n            gotten: [userId],\n            isCustom: true\n        })\n\n        db.doAddGift(listId, JSON.stringify(wishlistCopy));\n    }\n\n    const askToGoIn = (index, item) => {\n        // update the item data to have you as one of the getters\n        // if(item.gotten) {\n        //     if(item.gotten.indexOf(getUserId()) > -1) {\n        //         //  If you already got it, remove it\n        //         item.gotten.splice(item.gotten.indexOf(getUserId()), 1)\n        //     } else {\n        //         item.gotten.push(getUserId())\n        //         item.gotten = [...new Set(item.gotten)]\n        //     }\n        // } else {\n        //     item.gotten = [getUserId()]\n        // }\n        // // update whole list with the updated item\n        // const listId = id;\n        // let dataCopy = wishlistData; // an array of items (each one is an object)\n        // let wishlistCopy\n        // if(dataCopy && dataCopy[listId]) {\n        //     wishlistCopy = JSON.parse(wishlistData[id])\n        // } else {\n        //     wishlistCopy = []\n        // }\n        // wishlistCopy[index] = item;\n        // db.doAddGift(listId, JSON.stringify(wishlistCopy));\n    }\n\n    const handleDelete = (index, item) => {\n               // update whole list with the updated item\n        const listId = id;\n        let dataCopy = wishlistData; // an array of items (each one is an object)\n        let wishlistCopy\n        if(dataCopy && dataCopy[listId]) {\n            wishlistCopy = JSON.parse(wishlistData[id])\n        } else {\n            wishlistCopy = []\n        }\n        wishlistCopy.splice(index, 1);\n        db.doAddGift(listId, JSON.stringify(wishlistCopy));\n    }\n\n    useEffect(() => {\n        setIsListOwner(getUserId() === id)\n        try {\n            firebase.db.ref(`wishlists`).on(\"value\", snapshot => {\n                setWishlistData(snapshot.val());\n            });\n        } catch (e) {\n\n        }\n\n    }, []);\n\n    const getUserId = () => {\n        try {\n            return firebase.auth.currentUser.uid;\n        } catch (e) {\n            return ''\n        }\n    }\n\n    const shouldShow = (item) => {\n        if(isListOwner && !item.isCustom) {\n            // if you're the owner, you should see all of your items, no matter what. (unless they're deleted) // add later\n            return true;\n        }\n        if(isListOwner && item.isCustom) {\n            return false;\n        }\n        return true;\n    }\n\n    const getItem = (index, item) => {\n        // update the item data to have you as one of the getters\n        if(item.gotten) {\n            if(item.gotten.indexOf(getUserId()) > -1) {\n                //  If you already got it, remove it\n                item.gotten.splice(item.gotten.indexOf(getUserId()), 1)\n            } else {\n                item.gotten.push(getUserId())\n                item.gotten = [...new Set(item.gotten)]\n            }\n        } else {\n            item.gotten = [getUserId()]\n        }\n        // update whole list with the updated item\n        const listId = id;\n        let dataCopy = wishlistData; // an array of items (each one is an object)\n        let wishlistCopy\n        if(dataCopy && dataCopy[listId]) {\n            wishlistCopy = JSON.parse(wishlistData[id])\n        } else {\n            wishlistCopy = []\n        }\n        wishlistCopy[index] = item;\n        db.doAddGift(listId, JSON.stringify(wishlistCopy));\n    }\n\n    const listItems = () => {\n        if (!wishlistData || wishlistData.length < 1 || !wishlistData[id]) return\n        const parsedItems = JSON.parse(wishlistData[id])\n        return parsedItems.map((item, index) => {\n                //Don't show things that have been gotten if you are the list owner\n                if (shouldShow(item)) {\n                    return <ListItem key={index} item={item} isListOwner={isListOwner} getItem={getItem} index={index} handleDelete={handleDelete} askToGoIn={askToGoIn}/>\n\n                }\n            }\n        )\n    }\n\n    return (\n        <div className={\"listContainer\"}>\n            {listItems()}\n            {!isListOwner &&\n            <div className=\"customItem\">\n                <h3>Get something that's not on the list</h3>\n                <input value={customName} onChange={(e) => setCustomName(e.target.value)} className={\"customItemName\"} type=\"text\" placeholder=\"What are you getting?\"/>\n                <button className={\"addCustomButton\"} onClick={handleAddCustomItem}>Add</button>\n            </div>}\n        </div>\n    );\n}\n\n","import React, {useEffect, useState} from 'react';\r\nimport Navigation from \"./Navigation\";\r\nimport AddGiftForm from './AddGiftForm';\r\nimport Wishlist from './Wishlist';\r\nimport { db, firebase } from \"../firebase\";\r\nimport './landing.css';\r\n\r\nexport default function Landing() {\r\n    const [gift, setGift] = useState({})\r\n    const [wishlistItems, setWishlistItems] = useState([])\r\n\r\n    const [wishlistUsers, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        // if not logged in, redirect to sign in\r\n\r\n        firebase.db.ref('users').on(\"value\", snapshot => {\r\n            setUsers(snapshot.val())\r\n        });\r\n\r\n        try {\r\n            firebase.db.ref(`wishlists`).on(\"value\", snapshot => {\r\n                setWishlistItems(snapshot.val());\r\n            });\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const setGiftItem = (name, value) => {\r\n        const updatedGift = gift\r\n        updatedGift[name] = value\r\n        setGift({...updatedGift})\r\n    }\r\n\r\n    const getUserId = () => {\r\n        try {\r\n            return firebase.auth.currentUser.uid;\r\n        } catch (e) {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        const userId = getUserId()\r\n        let dataCopy = wishlistItems || {};\r\n        let myWishlist\r\n        if(dataCopy && dataCopy[userId]) {\r\n            myWishlist = JSON.parse(dataCopy[userId])\r\n        } else {\r\n            myWishlist = []\r\n        }\r\n        myWishlist.push(gift)\r\n        db.doAddGift(userId, JSON.stringify(myWishlist));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {getUserId() ?\r\n                <>\r\n                    <AddGiftForm setGiftItem={setGiftItem} gift={gift} handleSubmit={handleSubmit}/>\r\n                    <Wishlist id={getUserId()}/>\r\n                </>\r\n                :\r\n                <h1 className={\"notLoggedIn\"}>Please log in to continue</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport Wishlist from '../Wishlist'\nimport Navigation from \"../Navigation\";\nimport { firebase } from '../../firebase'\n\nexport default function ViewWishlistPage(props) {\n    const getId = () => {\n        const path = window.location.pathname;\n        return path.split('/wishlist/')[1]\n    }\n\n    const getUserId = () => {\n        try {\n            return firebase.auth.currentUser.uid;\n        } catch (e) {\n            return ''\n        }\n    }\n\n    return (\n        <div>\n            {getId() !== getUserId() ?\n                <Wishlist id={getId()}/>\n                :\n                <h1>This is your wishlist, You can't see it</h1>\n            }\n\n        </div>\n    );\n}\n\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useEffect, useState} from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport * as routes from \"./constants/routes\";\nimport SignUpPage from \"./components/SignUp\";\nimport SignInPage from \"./components/SignIn\";\nimport PasswordForgetPage from \"./components/PasswordForget\";\nimport AccountPage from \"./components/Account\";\nimport LandingPage from \"./components/Landing\";\nimport withAuthentication from \"./components/withAuthentication\";\nimport Navigation from \"./components/Navigation\";\nimport ViewWishlistPage from './components/ViewWishlistPage'\n\nconst App = () => {\n\n    return <BrowserRouter>\n        <Navigation/>\n        <Route exact path={routes.LANDING} component={LandingPage}/>\n        <Route exact path={routes.SIGN_UP} component={SignUpPage}/>\n        <Route exact path={routes.SIGN_IN} component={SignInPage}/>\n        <Route\n            exact\n            path={routes.PASSWORD_FORGET}\n            component={PasswordForgetPage}\n        />\n        <Route exact path={routes.ACCOUNT} component={AccountPage}/>\n        <Route path={routes.WISHLIST} component={ViewWishlistPage}/>\n    </BrowserRouter>\n};\n\nexport default withAuthentication(App);\n","import React from \"react\";\nimport { firebase } from \"../firebase\";\nimport AuthUserContext from \"./AuthUserContext\";\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    state = {\n      authUser: null\n    };\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        //   passing down the authUser value, so other components can consume it\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return WithAuthentication;\n};\n\nexport default withAuthentication;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}